<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ninghan.common.seatDao.ClassroomSeatMapper">
    <resultMap id="BaseResultMap" type="cn.ninghan.common.domain.ClassroomSeat">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="open_time" property="time" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="classroom_number_id" property="classroomNumberId" jdbcType="INTEGER"/>
        <result column="carriage_number" property="carriageNumber" jdbcType="INTEGER"/>
        <result column="rowNumber" property="rowNumber" jdbcType="INTEGER"/>
        <result column="seat_number" property="seatNumber" jdbcType="INTEGER"/>
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="show_number" property="showNumber" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
<!--    千万不能将open_time取名为time，不知道为什么，取名为time，插入能正常插入，但select时，sahrdingjdbc会直接失效，不走分库分表策略-->
<!--    我猜测是因为先到mapper里解析sql语句，但是出了错，没有定位到用来分片的列所以没有分库分表-->
    <sql id="Base_Column_List">
    id, open_time, user_id, classroom_number_id, carriage_number, rowNumber,
    seat_number, start_time, end_time, show_number, status
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from classroom_seat
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from classroom_seat
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="cn.ninghan.common.domain.ClassroomSeat">
    insert into classroom_seat (id, time, user_id, 
      traveller_id, classroom_number_id, carriage_number, 
      rowNumber, seat_number, 
      start_time, end_time, 
      show_number, status, 
      )
    values (#{id,jdbcType=BIGINT}, #{time,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{classroomNumberId,jdbcType=INTEGER}, #{carriageNumber,jdbcType=INTEGER}, 
      #{rowNumber,jdbcType=INTEGER}, #{seatNumber,jdbcType=INTEGER},
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{showNumber,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="cn.ninghan.common.domain.ClassroomSeat">
        insert into classroom_seat
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="userId != null">
                user_id,
            </if>

            <if test="classroomNumberId != null">
                classroom_number_id,
            </if>
            <if test="carriageNumber != null">
                carriage_number,
            </if>
            <if test="rowNumber != null">
                rowNumber,
            </if>
            <if test="seatNumber != null">
                seat_number,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="showNumber != null">
                show_number,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="time != null">
                #{time,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="classroomNumberId != null">
                #{classroomNumberId,jdbcType=INTEGER},
            </if>
            <if test="carriageNumber != null">
                #{carriageNumber,jdbcType=INTEGER},
            </if>
            <if test="rowNumber != null">
                #{rowNumber,jdbcType=INTEGER},
            </if>
            <if test="seatNumber != null">
                #{seatNumber,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="showNumber != null">
                #{showNumber,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.ninghan.common.domain.ClassroomSeat">
        update classroom_seat
        <set>
            <if test="time != null">
                time = #{time,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="classroomNumberId != null">
                classroom_number_id = #{classroomNumberId,jdbcType=INTEGER},
            </if>
            <if test="carriageNumber != null">
                carriage_number = #{carriageNumber,jdbcType=INTEGER},
            </if>
            <if test="rowNumber != null">
                rowNumber = #{rowNumber,jdbcType=INTEGER},
            </if>
            <if test="seatNumber != null">
                seat_number = #{seatNumber,jdbcType=INTEGER},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="showNumber != null">
                show_number = #{showNumber,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.ninghan.common.domain.ClassroomSeat">
    update classroom_seat
    set time = #{time,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      classroom_number_id = #{classroomNumberId,jdbcType=INTEGER},
      carriage_number = #{carriageNumber,jdbcType=INTEGER},
      rowNumber = #{rowNumber,jdbcType=INTEGER},
      seat_number = #{seatNumber,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      show_number = #{showNumber,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
    where id = #{id,jdbcType=BIGINT}
  </update>
    <insert id="batchInsert" parameterType="list">
        insert into classroom_seat (open_time, classroom_number_id, carriage_number,
        rowNumber, seat_number, 
        start_time, end_time,
        show_number, status)
        values
        <foreach collection="list" item="detail" separator=",">
            (#{detail.time,jdbcType=VARCHAR}, #{detail.classroomNumberId,jdbcType=INTEGER},
            #{detail.carriageNumber,jdbcType=INTEGER},
            #{detail.rowNumber,jdbcType=INTEGER}, #{detail.seatNumber,jdbcType=INTEGER},
            #{detail.startTime,jdbcType=TIMESTAMP}, #{detail.endTime,jdbcType=TIMESTAMP},
            #{detail.showNumber,jdbcType=VARCHAR}, #{detail.status,jdbcType=INTEGER})
        </foreach>
    </insert>

    <select id="searchList" parameterType="map" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM classroom_seat
        WHERE classroom_number_id = #{classroomNumberId}
        AND open_time = #{time}
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="carriageNum != null">
            AND carriage_number = #{carriageNum}
        </if>
        <if test="rowNum != null">
            AND rowNumber = #{rowNum}
        </if>
        <if test="seatNum != null">
            AND seat_number = #{seatNum}
        </if>
        LIMIT ${offset},${pageSize}
    </select>

    <select id="countList" parameterType="map" resultType="int">
        SELECT count(1)
        FROM classroom_seat
        WHERE classroom_number_id = #{classroomNumberId}
        AND open_time = #{time}
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="carriageNum != null">
            AND carriage_number = #{carriageNum}
        </if>
        <if test="rowNum != null">
            AND rowNumber = #{rowNum}
        </if>
        <if test="seatNum != null">
            AND seat_number = #{seatNum}
        </if>
    </select>
    <update id="batchPublish" parameterType="map">
        UPDATE classroom_seat
        SET status = 1
        WHERE id IN
        <foreach collection="classroomSeatIdList" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        AND classroom_number_id = #{classroomNumberId}
        AND status = 0
    </update>
    <update id="batchInitialize" parameterType="map">
        UPDATE classroom_seat
        SET status = 0
        WHERE id IN
        <foreach collection="classroomSeatIdList" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        AND classroom_number_id = #{classroomNumberId}
        AND status != 0
    </update>

    <select id="getToPlaceSeatList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM classroom_seat
        WHERE classroom_number_id = #{classroomNumberId}
        and seat_number = #{seatNum}
        and start_time in
        <foreach collection="startTimeList" item="startTime" open="(" close=")" separator=",">
            #{startTime}
        </foreach>
        and status = 1
        and open_time = #{date}
        order by start_time asc
    </select>

    <update id="batchPlace">
        UPDATE classroom_seat
        SET status = 2, user_id = #{userId}
        WHERE id in
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and status = 1 and classroom_number_id = #{classroomNumberId}
    </update>
    <update id="batchRollbackPlace">
        UPDATE classroom_seat
        SET status = 1, traveller_id = 0, user_id = 0
        WHERE from_station_id in
        <foreach collection="fromStationIdList" item="fromStationId" open="(" close=")" separator=",">
            #{fromStationId}
        </foreach>
        and classroom_number_id = #{trainSeat.classroomNumberId}
        and carriage_number = #{trainSeat.carriageNumber}
        and rowNumber = #{trainSeat.rowNumber}
        and seat_number = #{trainSeat.seatNumber}
        and traveller_id = #{trainSeat.travellerId}
        and user_id = #{trainSeat.userId}
        and time = #{trainSeat.time}
        and status = 2
    </update>

    <update id="batchRollbackPlace2">
        UPDATE classroom_seat
        SET status = 1
        WHERE id in
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and status = 2 and classroom_number_id = #{classroomNumberId} and user_id = #{userId}
    </update>

    <update id="cancelSeat">
    update classroom_seat
    set status = 1,travller_id = 0,user_id = 0
    where classroom_number_id = #{trainNum}
    and carriage_number = #{carriageNum}
    and rowNumber = #{rowNum}
    and seat_number = #{seatNum}
    and traveller_id = #{travellerId}
    and user_id = #{userId}
    and time = #{time}
  </update>
</mapper>